#version 450

layout(binding = 0) uniform UBO
{
    float elapsedTime;
    float time;
    uint spaceWidth;
    uint spaceHeight;
    uint agentCount;
} ubo;
layout (binding = 1, rgba8) uniform readonly image2D inputImage;
layout (binding = 2, rgba8) uniform image2D resultImage;

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main()
{
    // 1D workload
    vec2 texCoord = gl_GlobalInvocationID.xy;
    if (texCoord.x >= ubo.spaceWidth || texCoord.x < 0 || texCoord.y >= ubo.spaceHeight || texCoord.y < 0) {
        return;
    }

    float decaySpeed = 4.;
    vec3 col = imageLoad(inputImage, ivec2(texCoord)).rgb;
    col = max(vec3(0.), col - col * decaySpeed * ubo.elapsedTime);
    imageStore(resultImage, ivec2(texCoord), vec4(col, 1.0));
}